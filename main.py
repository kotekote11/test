import os
import logging
import random
import requests
import json
import time
from bs4 import BeautifulSoup

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω API –∏ ID –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("API_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")
SENT_LIST_FILE = 'google.json'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
KEYWORDS = [
    "–æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ–Ω—Ç–∞–Ω–æ–≤",
    "–æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ–Ω—Ç–∞–Ω–æ–≤ 2025",
    "–æ—Ç–∫—Ä—ã—Ç–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω—Ç–∞–Ω–∞"
]

# –°–ø–∏—Å–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
IGNORE_WORDS = {"–Ω–µ—Ñ—Ç—å", "–Ω–µ–¥—Ä", "–º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ"}  # –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
IGNORE_SITES = {"instagram", "livejournal", "fontanka"}  # –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

def clean_url(url):
    """–û—á–∏—â–∞–µ—Ç URL –æ—Ç '/url?q=' –∏ –ª–∏—à–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ—Å–ª–µ '&sa=U&ved'."""
    if url.startswith('/url?q='):
        url = url[len('/url?q='):]
    if '&sa=U&ved' in url:
        url = url.split('&sa=U&ved')[0]
    return url

def load_sent_news():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç."""
    if os.path.exists(SENT_LIST_FILE):
        try:
            with open(SENT_LIST_FILE, 'r') as file:
                return json.load(file)
        except (FileNotFoundError, json.JSONDecodeError):
            logging.warning("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.")
            return []  # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
    return []  # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫

def save_sent_news(sent_news):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª."""
    with open(SENT_LIST_FILE, 'w') as file:
        json.dump(sent_news, file)

def search_news(keyword):
    """–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ Google –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É."""
    query = f'https://www.google.ru/search?q={keyword}&hl=ru&tbs=qdr:d'  # –ü–æ–∏—Å–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
    response = requests.get(query)
    response.raise_for_status()
    
    soup = BeautifulSoup(response.text, 'html.parser')
    news = []

    # –ù–∞–π–¥–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å—Å—ã–ª–∫–∏
    for item in soup.find_all('h3'):
        title = item.get_text()
        link = item.find_parent('a')['href']
        cleaned_link = clean_url(link)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Ä–∞–±–æ—á–∞—è
        try:
            if requests.head(cleaned_link).status_code == 200:
                news.append({'title': title, 'link': cleaned_link})
        except requests.exceptions.RequestException:
            logging.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞: {cleaned_link}")

    logging.debug(f"–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∑–∞–ø—Ä–æ—Å—É '{keyword}': {len(news)}")
    return news

def send_message(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª."""
    url = f"https://api.telegram.org/bot{API_TOKEN}/sendMessage"
    payload = {
        'chat_id': CHANNEL_ID,
        'text': text,
        'parse_mode': 'HTML'  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        logging.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return True
    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def send_random_news():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –≤ –∫–∞–Ω–∞–ª."""
    sent_news = load_sent_news()  # –ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏

    sent_titles = {item['title'] for item in sent_news}  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏

    for keyword in KEYWORDS:
        news = search_news(keyword)

        # –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º, –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º —Å–ª–æ–≤–∞–º –∏ —Å–∞–π—Ç–∞–º
        filtered_news = []
        for item in news:
            title = item['title']
            link = item['link']
            site = link.split('/')[2]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ —Å—Å—ã–ª–∫–∏

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –∏ —Å–∞–π—Ç–æ–≤
            if title not in sent_titles and not any(word in title.lower() for word in IGNORE_WORDS) and not any(site in link for site in IGNORE_SITES):
                filtered_news.append(item)

        if filtered_news:
            random_news = random.choice(filtered_news)
            title = random_news['title']
            link = random_news['link']
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ö–µ—à—Ç–µ–≥–∞–º–∏
            message_text = f"{title}\n{link}\n‚õ≤@MonitoringFontanüì∞#MonitoringFontan"

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            if send_message(message_text):
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
                sent_news.append({'title': title, 'link': link})
                save_sent_news(sent_news)
                logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: {title}")

def cleanup_sent_news(num_of_iterations):
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 9 –∑–∞–ø–∏—Å–µ–π –∫–∞–∂–¥—ã–µ 90 –∏—Ç–µ—Ä–∞—Ü–∏–π."""
    if num_of_iterations % 90 == 0:
        sent_news = load_sent_news()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
        if len(sent_news) > 9:
            sent_news = sent_news[-9:]  # –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 9 –∑–∞–ø–∏—Å–µ–π
            save_sent_news(sent_news)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ —Ñ–∞–π–ª
            logging.info("–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 9 –∑–∞–ø–∏—Å–µ–π.")

if __name__ == '__main__':
    num_iterations = 0
    while True:
        send_random_news()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        num_iterations += 1

        cleanup_sent_news(num_iterations)  # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

        time.sleep(300)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º (5 –º–∏–Ω—É—Ç)
