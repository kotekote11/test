import os
import requests
from bs4 import BeautifulSoup
import logging
import json
import time

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
API_TOKEN = os.getenv("API_TOKEN")  # –¢–æ–∫–µ–Ω Telegram
CHANNEL_ID = os.getenv("CHANNEL_ID")  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞
SENT_LIST_FILE = 'google.json'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
KEYWORDS = ["–æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ–Ω—Ç–∞–Ω–æ–≤", "–æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ–Ω—Ç–∞–Ω–æ–≤ 2025", "–æ—Ç–∫—Ä—ã—Ç–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω—Ç–∞–Ω–∞ "]
IGNORE_SITES = ["instagram", "livejournal", "fontanka"]  # –°–∞–π—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è
IGNORE_WORDS = ["–Ω–µ—Ñ—Ç—å", "–Ω–µ–¥—Ä", "–º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ"]  # –°–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è

def clean_url(url):
    """–û—á–∏—â–∞–µ—Ç URL, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–π –∞–¥—Ä–µ—Å."""
    url = url[len('/url?q='):]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å
    return url.split('&sa=U&ved')[0]  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

def send_telegram_message(message_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    url = f'https://api.telegram.org/bot{API_TOKEN}/sendMessage'
    data = {
        'chat_id': CHANNEL_ID,
        'text': message_text,
        'parse_mode': 'HTML'
    }
    response = requests.post(url, data=data)
    return response.json()

def search_news():
    """–ò—â–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –Ω–∞ Google."""
    query = f'https://www.google.ru/search?q={KEYWORDS}&hl=ru&tbs=qdr:d'  # –ü–æ–∏—Å–∫ –∑–∞ –î–µ–Ω—å
    response = requests.get(query)
    soup = BeautifulSoup(response.text, 'html.parser')

    news_items = []
    for item in soup.find_all('h3'):
        link = item.find_parent('a')  # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç <a>
        if link:
            cleaned_link = clean_url(link['href'])
            title = item.get_text(strip=True)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Å–ª–æ–≤–∞
            if any(word in title.lower() for word in IGNORE_WORDS):
                logging.debug(f'–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫: {title}')
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ —Å–∞–π—Ç –∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–º
            if any(site in cleaned_link for site in IGNORE_SITES):
                logging.debug(f'–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∞–π—Ç: {cleaned_link}')
                continue

            if requests.head(cleaned_link).status_code == 200:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏
                news_items.append({'title': title, 'link': cleaned_link})

    return news_items

def load_sent_list():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ —Ñ–∞–π–ª–∞."""
    if os.path.exists(SENT_LIST_FILE):
        with open(SENT_LIST_FILE, 'r') as file:
            return json.load(file)
    return []

def save_sent_list(sent_list):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ñ–∞–π–ª."""
    with open(SENT_LIST_FILE, 'w') as file:
        json.dump(sent_list, file)

def main():
    sent_list = load_sent_list()  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    repeat_count = 0

    while True:
        news_items = search_news()
        logging.info(f'–ù–∞–π–¥–µ–Ω–æ {len(news_items)} –Ω–æ–≤–æ—Å—Ç–µ–π.')

        for news in news_items:
            if news['link'] not in sent_list:  # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞

                message_text = f"{news['title']}\n{news['link']}\n‚õ≤@MonitoringFontan\nüì∞#MonitoringFontan"
                send_telegram_message(message_text)
                sent_list.append(news['link'])  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
                logging.info(f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {news["title"]}')

        repeat_count += 1

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª–µ, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 9, –∫–∞–∂–¥—ã–µ 90 –ø–æ–≤—Ç–æ—Ä–æ–≤
        if repeat_count % 90 == 0:
            sent_list = sent_list[-9:]  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 9 –∑–∞–ø–∏—Å–µ–π
            save_sent_list(sent_list)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫

        time.sleep(300)  # –ü–∞—É–∑–∞ 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    main()
